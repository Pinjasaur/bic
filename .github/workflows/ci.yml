name: CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: bic
  PANDOC_VERSION: 2.17.0.1
  BATS_VERSION: 1.5.0

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    # in sync with Dockerfile
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Dependencies
        run: sudo apt-get update && sudo apt-get install -y tzdata

      - name: Pandoc
        run: |
          curl -sL https://github.com/jgm/pandoc/releases/download/$PANDOC_VERSION/pandoc-$PANDOC_VERSION-1-amd64.deb -o pandoc-$PANDOC_VERSION.deb && \
          sudo dpkg -i pandoc-$PANDOC_VERSION.deb && \
          rm -f pandoc-$PANDOC_VERSION.deb

      - name: BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: ${{ env.BATS_VERSION }}

      - name: Lint
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: lib

      - name: Test
        run: bats tests/test.bats --print-output-on-failure

      - name: Smoketest via bic-example
        run: git clone https://github.com/Pinjasaur/bic-example.git && ./bic bic-example

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    # in sync with Dockerfile
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME


      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
